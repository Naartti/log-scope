{"version":3,"sources":["webpack://log-scope/webpack/universalModuleDefinition","webpack://log-scope/webpack/bootstrap","webpack://log-scope/./src/util/polyfill.js","webpack://log-scope/./src/logScope.js","webpack://log-scope/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","m","Object","entries","obj","ownProps","keys","i","length","resArray","Array","init","config","settings","forEach","key","undefined","logScope","importingServiceName","log","serviceName","setup","debug","color","logToConsole","warning","info","todo","fixme","success","error","danger","sequence","active","history","count","type","message","print","onlyScope","counter","console","toUpperCase","data","logType","Date","startTime","store","LAST_ITEM_INDEX","PREVIOUS_MESSAGE","TRIM_INDEX","indexOf","substring","END_COUNT_INDEX","COUNT","Number","getTime","push","read","err","trace","Error","onError","callbackData","latest","storeToHistory","preferredLength","translation","historyLength","initialize","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","bind","n","object","property","prototype","hasOwnProperty","call","p","s","moduleId","l","modules"],"mappings":"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","file":"log-scope.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"log-scope\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"log-scope\"] = factory();\n\telse\n\t\troot[\"log-scope\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","if (!Object.entries) {\n  Object.entries = function (obj) {\n    let ownProps = Object.keys(obj)\n    let i = ownProps.length\n    let resArray = new Array(i) // preallocate the Array\n\n    while (i--) {\n      resArray[i] = [ownProps[i], obj[ownProps[i]]]\n    }\n\n    return resArray\n  }\n}\n","const settings = {\n  print: true,\n  store: true,\n  counter: true,\n  onError: null\n}\nconst startTime = +(new Date())\nlet onlyScope = null\n\nconst logScope = (importingServiceName) => {\n  let log = {\n    serviceName: importingServiceName,\n    setup: {\n      debug: {\n        color: '#0093B4', logToConsole: true\n      },\n      warning: {\n        color: 'orange', logToConsole: true\n      },\n      info: {\n        color: '#0093B4', logToConsole: true\n      },\n      todo: {\n        color: 'purple', logToConsole: true\n      },\n      fixme: {\n        color: 'red', logToConsole: true\n      },\n      success: {\n        color: 'green', logToConsole: true\n      },\n      error: {\n        color: 'red', logToConsole: true\n      },\n      danger: {\n        color: 'red', logToConsole: true\n      },\n      sequence: {\n        color: 'black', logToConsole: false\n      }\n    },\n    active: {},\n    history: {},\n    count: {}\n  }\n\n  // Functionality\n  log.logToConsole = (type, message, ...data) => {\n    if (!log.active[type] ||\n      !settings.print) {\n      return\n    }\n\n    // Check only scope\n    if (onlyScope && log.serviceName !== onlyScope) {\n      return\n    }\n\n    const color = log.setup[type].color\n    const count = settings.counter ? ` (${log.count[type]})` : ''\n\n    // eslint-disable-next-line\n    console.log(`%c ${log.serviceName} [${type.toUpperCase()}]${count}: ${message}`, `color: ${color}`);\n\n    if (data) {\n      // eslint-disable-next-line\n      console.log(...data);\n    }\n  }\n\n  log.pause = (type = null) => {\n    if (type === null) {\n      Object.keys(log.active)\n        .forEach(logType => {\n          log.active[logType] = false\n        })\n      return\n    }\n\n    log.active[type] = false\n  }\n\n  log.resume = (type) => {\n    log.active[type] = true\n  }\n\n  log.only = type => {\n    if (!type) {\n      type = log.serviceName\n    }\n\n    // eslint-disable-next-line\n    console.log(`%c Only printing scope: ${type}`, 'color: red')\n    onlyScope = type\n  }\n\n  // Return the time in seconds since login\n  log.getTime = () => (+(new Date()) - startTime) / 1000\n\n  log.storeToHistory = (type, message) => {\n    if (!settings.store) {\n      return\n    }\n\n    // See if the previous history is the same as log message\n    const LAST_ITEM_INDEX = log.history[type].length - 1\n\n    if (LAST_ITEM_INDEX >= 0) {\n      const PREVIOUS_MESSAGE = log.history[type][LAST_ITEM_INDEX]\n      const TRIM_INDEX = PREVIOUS_MESSAGE.indexOf(':') + 2\n      const PREVIOUS_MESSAGE_TRIMMED = PREVIOUS_MESSAGE\n        .substring(TRIM_INDEX, PREVIOUS_MESSAGE.length)\n\n      // Adjust message to display multiple similar messages\n      if (PREVIOUS_MESSAGE_TRIMMED === message) {\n        // Count number of similar messages\n        const END_COUNT_INDEX = PREVIOUS_MESSAGE.indexOf(')')\n        const COUNT = (END_COUNT_INDEX === -1)\n          ? 2\n          : Number(PREVIOUS_MESSAGE.substring(2, END_COUNT_INDEX)) + 1\n\n        // Adjust message\n        log.history[type][LAST_ITEM_INDEX] = `(x${COUNT}) ${log.getTime()}: ${message}`\n\n        log.count[type] += 1\n\n        return\n      }\n    }\n\n    // Store\n    log.history[type].push(`${log.getTime()}: ${message}`)\n    log.count[type] += 1\n  }\n\n  log.latest = () => {\n    const history = log.read('sequence', 10)\n\n    if (history === '') {\n      return\n    }\n\n    // eslint-disable-next-line\n    console.log(history);\n  }\n\n  // Custom logs\n  log.error = (message, err, ...data) => {\n    // eslint-disable-next-line\n    console.trace(`%c ${log.serviceName} [ERROR]: (${log.count['error']})`, 'color: red', message);\n\n    // Build error\n    if (err && !(err instanceof Error)) {\n      data = [...data, err]\n    }\n\n    if (!err || !(err instanceof Error)) {\n      err = new Error(message)\n    }\n\n    // Emit error\n    if (settings.onError) {\n      const callbackData = data ? { message, data } : { message }\n      settings.onError(err, callbackData)\n    }\n\n    // Log ev. additional data\n    if (data) {\n      console.log(err, ...data)\n    } else {\n      console.log(err)\n    }\n\n    // Log sequences\n    log.latest()\n    log.storeToHistory('error', message)\n  }\n\n  // Translate logs\n  log.read = (type, preferredLength) => {\n    // Translate the history for a type into a string\n    const history = log.history[type]\n    let translation = ''\n    let historyLength = preferredLength\n\n    if (!historyLength ||\n      historyLength > history.length) {\n      historyLength = history.length\n    }\n\n    for (let i = history.length - 1; i >= history.length - historyLength; i -= 1) {\n      translation += `${history[i]}\\n`\n    }\n\n    return translation\n  }\n\n  ;\n  (log.initialize = () => {\n    Object.entries(log.setup).forEach(([type, setup]) => {\n      log.active[type] = setup.logToConsole === true\n      log.history[type] = []\n      log.count[type] = 0\n\n      // Create methods (error has a custom one)\n      if (type !== 'error') {\n        log[type] = (message, ...data) => {\n          log.logToConsole(type, message, ...data)\n          log.storeToHistory(type, message)\n        }\n      }\n    })\n  })()\n\n  return log\n}\n\nconst init = (config = {}) => {\n  Object.entries(settings).forEach(([key]) => {\n    if (config[key] !== undefined) {\n      settings[key] = config[key]\n    }\n  })\n}\n\nexport { logScope, init }\n\nexport default logScope\n","import './util/polyfill.js'\nimport logScope, { init } from './logScope.js'\n\nif (process.env.NODE_ENV === 'development') {\n  const log = logScope('scopeName')\n  log.success('We have a new scope!')\n\n  window.init = init\n  window.log = log\n}\n\n// Library export\nexport { logScope, init }\n\nexport default logScope\n"],"sourceRoot":""}